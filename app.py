import os
import telebot
from telebot import types
from flask import Flask, request

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('BOT_TOKEN')
bot = telebot.TeleBot(TOKEN)

# –°–æ–∑–¥–∞—ë–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –°–ø–∏—Å–∫–∏ chat_id –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Ç–∏ –∏ –≥–æ—Ä–æ–¥–∞
chat_ids_mk = {
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": -1002210043742,
    "–ß–µ–ª—è–±–∏–Ω—Å–∫": -1002238514762,
    "–ü–µ—Ä–º—å": -1002205127231,
    "–ò–∂–µ–≤—Å–∫": -1001604781452,
    "–ö–∞–∑–∞–Ω—å": -1002228881675,
    "–û—Ä–µ–Ω–±—É—Ä–≥": -1002255568202,
    "–£—Ñ–∞": -1002196469365,
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": -1002235645677,
    "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫": -1002248474008,
    "–ë–∞—Ä–Ω–∞—É–ª": -1002234471215,
    "–°–∞—Ä–∞–Ω—Å–∫": -1002426762134,
    "–û–º—Å–∫": -1002274367832,
    "–°–∞—Ä–∞—Ç–æ–≤": -1002426762134,
    "–í–æ—Ä–æ–Ω–µ–∂": -1002207503508,
    "–°–∞–º–∞—Ä–∞": -1001852671383,
    "–í–æ–ª–≥–æ–≥—Ä–∞–¥": -1002426762134,
    "–ö—É—Ä–≥–∞–Ω": -1002469285352,
    "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥": -1002426762134,
    "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥": -1002217056197,
    "–ò—Ä–∫—É—Ç—Å–∫": -1002210419274,
    "–ö–µ–º–µ—Ä–æ–≤–æ": -1002426762134,
    "–ú–æ—Å–∫–≤–∞": -1002208434096,
    "–°–∞–Ω–∫—Ç –ü–µ—Ç–µ—Ä–±—É—Ä–≥": -1002248474008,
    "–û–±—â–∞—è –≥—Ä—É–ø–ø–∞ –Æ–≥–∞": -1002161346845,
    "–û–±—â–∞—è –≥—Ä—É–ø–ø–∞ –î–∞–ª—å–Ω–µ–≥–æ –í–æ—Å—Ç–æ–∫–∞": -1002210419274,
    "–û–±—â–∞—è –≥—Ä—É–ø–ø–∞ –¢—é–º–µ–Ω—å –∏ –°–µ–≤–µ—Ä": -1002210623988,
    "–¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞ üõ†Ô∏è": -1002426733876
}

chat_ids_parni = {
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": -1002413948841,
    "–¢—é–º–µ–Ω—å": -1002255622479,
    "–û–º—Å–∫": -1002274367832,
    "–ß–µ–ª—è–±–∏–Ω—Å–∫": -1002406302365,
    "–ü–µ—Ä–º–∏": -1002280860973,
    "–ö—É—Ä–≥–∞–Ω": -1002469285352,
    "–•–ú–ê–û": -1002287709568,
    "–£—Ñ–∞": -1002448909000,
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": -1002413764329,
    "–Ø–ú–ê–õ": -1002371438340
}

# ID VIP-—á–∞—Ç–∞ "Elite Lounge"
VIP_CHAT_ID = -1002446486648  # –í–∞—à VIP-—á–∞—Ç

# –°—Å—ã–ª–∫–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –æ–ø–ª–∞—Ç—ã
VERIFICATION_LINK = "http://t.me/vip_znakbot"  # –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø ElitePoster. üëã\n–Ø –ø–æ–º–æ–≥—É –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.\n–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, process_text)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
def process_text(message):
    if message.photo or message.video:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
        if message.photo:
            media_type = "photo"
            file_id = message.photo[-1].file_id  # –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
            text = message.caption if message.caption else ""
        elif message.video:
            media_type = "video"
            file_id = message.video.file_id
            text = message.caption if message.caption else ""

        bot.send_message(message.chat.id, "üìã –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", reply_markup=get_network_markup())
        bot.register_next_step_handler(message, select_network, text, media_type, file_id)
    elif message.text:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        bot.send_message(message.chat.id, "üìã –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", reply_markup=get_network_markup())
        bot.register_next_step_handler(message, select_network, text=message.text, media_type=None, file_id=None)
    else:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ.")
        bot.register_next_step_handler(message, process_text)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —Å–µ—Ç–∏
def get_network_markup():
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.add("–ú—É–∂—Å–∫–æ–π –ö–ª—É–±", "–ü–ê–†–ù–ò 18+", "–û–±–µ —Å–µ—Ç–∏")
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ç–∏
def select_network(message, text, media_type, file_id):
    selected_network = message.text
    if selected_network in ["–ú—É–∂—Å–∫–æ–π –ö–ª—É–±", "–ü–ê–†–ù–ò 18+", "–û–±–µ —Å–µ—Ç–∏"]:
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
        cities = chat_ids_mk.keys() if selected_network == "–ú—É–∂—Å–∫–æ–π –ö–ª—É–±" else \
                chat_ids_parni.keys() if selected_network == "–ü–ê–†–ù–ò 18+" else \
                list(chat_ids_mk.keys()) + list(chat_ids_parni.keys())
        for city in cities:
            markup.add(city)
        markup.add("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–µ—Ç—å")
        bot.send_message(message.chat.id, "üìç –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–µ—Ç—å':", reply_markup=markup)
        bot.register_next_step_handler(message, select_city_and_publish, text, selected_network, media_type, file_id)
    else:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞! –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å–µ—Ç—å.")
        bot.register_next_step_handler(message, process_text)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
def select_city_and_publish(message, text, selected_network, media_type, file_id):
    city = message.text
    if city == "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–µ—Ç—å":
        bot.send_message(message.chat.id, "üìã –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", reply_markup=get_network_markup())
        bot.register_next_step_handler(message, select_network, text, media_type, file_id)
    else:
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ VIP-—É—á–∞—Å—Ç–Ω–∏–∫–∞
            chat_member = bot.get_chat_member(VIP_CHAT_ID, message.from_user.id)
            if chat_member.status in ["member", "administrator", "creator"]:
                vip_tag = "\n\n‚≠êÔ∏è –ü—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ ‚≠êÔ∏è"
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_name = f"[{message.from_user.first_name}](tg://user?id={message.from_user.id})"
                full_text = f"üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç {user_name}:\n\n{text}{vip_tag}"
                # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–µ—Ç—è—Ö
                if selected_network == "–û–±–µ —Å–µ—Ç–∏":
                    networks = ["–ú—É–∂—Å–∫–æ–π –ö–ª—É–±", "–ü–ê–†–ù–ò 18+"]
                else:
                    networks = [selected_network]

                for network in networks:
                    chat_dict = chat_ids_mk if network == "–ú—É–∂—Å–∫–æ–π –ö–ª—É–±" else chat_ids_parni
                    if city in chat_dict:
                        chat_id = chat_dict[city]
                        try:
                            if media_type == "photo":
                                bot.send_photo(chat_id, file_id, caption=full_text, parse_mode="Markdown")
                            elif media_type == "video":
                                bot.send_video(chat_id, file_id, caption=full_text, parse_mode="Markdown")
                            else:
                                bot.send_message(chat_id, full_text, parse_mode="Markdown")
                            bot.send_message(message.chat.id, f"‚úÖ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ —Å–µ—Ç–∏ ¬´{network}¬ª, –≥–æ—Ä–æ–¥–µ {city}.")
                        except telebot.apihelper.ApiTelegramException as e:
                            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e.description}")
                    else:
                        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Ç–∏ ¬´{network}¬ª.")
            else:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ VIP, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
                markup = types.InlineKeyboardMarkup()
                verify_button = types.InlineKeyboardButton(text="üõ†Ô∏è –ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é", url=VERIFICATION_LINK)
                markup.add(verify_button)
                bot.send_message(message.chat.id, "üîì –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º. –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø—Ä–æ–π–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é:", reply_markup=markup)
        except telebot.apihelper.ApiTelegramException as e:
            bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ VIP-—Å—Ç–∞—Ç—É—Å–∞: {e.description}")

# –í–µ–±—Ö—É–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@app.route('/webhook', methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
    bot.process_new_updates([update])
    return 'ok', 200

# –ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
